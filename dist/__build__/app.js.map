{"version":3,"sources":["webpack:///./src/app/app.scss","webpack:///./src/app/app.ts","webpack:///./src/app/bootstrap.ts"],"names":["App","App.constructor","App.onInit","App.serverData","App.errorMessage"],"mappings":";;;;;;;;;;;;;AAAA,yBAAwB,2BAA2B,EAAE,4BAA4B,wBAAwB,EAAE,mBAAmB,oBAAoB,sBAAsB,uBAAuB,EAAE,0BAA0B,kBAAkB,oBAAoB,qBAAqB,EAAE,WAAW,gBAAgB,EAAE,G;;;;;;;;;;;;;;;;;;ACGrT,sCAAqD,EAAmB,CAAC;AAEzE,kCAA4B,GAAe,CAAC;AAK5C,sCAA+C,EAAmB,CAAC;AACnE,oCAAgC,GAAiB,CAAC;AAGlD,KAAI,MAAM,GAAG,mBAAO,CAAC,GAAY,CAAC,CAAC;AAMnC;KA2CEA,aAAmBA,IAAUA;SAAVC,SAAIA,GAAJA,IAAIA,CAAMA;SAF7BA,SAAIA,GAAeA,EAAEA,CAACA;SAGpBA,IAAIA,CAACA,KAAKA,GAAGA,WAAWA,CAACA;KAC3BA,CAACA;KAEDD,oBAAMA,GAANA;SACEE,UAAUA;SACVA,mEAAmEA;SACnEA,EAAEA;SACFA,4BAA4BA;SAC5BA,oBAAoBA;SACpBA,EAAEA;SACFA,uEAAuEA;SAPzEA,iBA6BCA;SApBCA,IAAMA,QAAQA,GAAGA,uBAAuBA,CAACA;SACzCA,IAAMA,YAAYA,GAAGA,YAAYA,CAACA;SAClCA,IAAMA,YAAYA,GAAGA,IAAIA,cAAOA,EAAEA,CAACA;SAEnCA,YAAYA,CAACA,MAAMA,CAACA,QAAQA,EAAEA,kBAAkBA,CAACA,CAACA;SAClDA,YAAYA,CAACA,MAAMA,CAACA,cAAcA,EAAEA,kBAAkBA,CAACA,CAACA;SAExDA,IAAIA,CAACA,IAAIA;cACNA,GAAGA,CAACA,QAAQA,GAAGA,YAAYA,EAAEA;aAC5BA,OAAOA,EAAEA,YAAYA;UACtBA,CAACA;cACDA,SAASA,CAERA,cAAIA,IAAIA,YAAIA,CAACA,UAAUA,CAACA,IAAIA,CAACA,EAArBA,CAAqBA,EAE7BA,aAAGA,IAAKA,YAAIA,CAACA,YAAYA,CAACA,GAAGA,CAACA,EAAtBA,CAAsBA,EAE9BA,cAAQA,cAAOA,CAACA,GAAGA,CAACA,UAAUA,CAACA,EAAvBA,CAAuBA,CAChCA,CAACA;KAENA,CAACA;KAEDF,wBAAUA,GAAVA,UAAWA,IAAIA;SACbG,OAAOA,CAACA,GAAGA,CAACA,MAAMA,EAAEA,IAAIA,CAACA,CAACA;SAC1BA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;KACnBA,CAACA;KAEDH,0BAAYA,GAAZA,UAAaA,GAAGA;SACdI,OAAOA,CAACA,IAAIA,CAAIA,IAAIA,qFAC8DA,IAAIA,iCACxDA,IAAIA,2BAEjCA,CAACA,CAACA;KACLA,CAACA;KAzFHJ;SAACA,oBAASA,CAACA;aAITA,QAAQA,EAAEA,KAAKA;aAGfA,QAAQA,EAAEA,CAAEA,0BAAeA,EAAEA,0BAAeA,EAAEA,0BAAiBA,CAAEA;aAEjEA,MAAMA,EAAEA,CAACA,MAAMA,CAACA;aAEhBA,QAAQA,EAAEA,0pBAyBTA;UACFA,CAACA;;aAsDDA;KAADA,UAACA;AAADA,EAACA,IAAA;AArDY,YAAG,MAqDf;;;;;;;;AC/GD,iDAAgD;AAKhD,sCAAiE,EAAmB,CAAC;AACrF,oCAA+B,GAAiB,CAAC;AACjD,kCAA6B,GAAe,CAAC;AAM7C,iCAAkB,GAAO,CAAC;AAM1B,qBAAS,CAAC,SAAG,EAAE;KAEb,yBAAc;KACd,yBAAgB;KAChB,qBAAc;KACd,kCAAuB;EACxB,CAAC,CAAC","file":"app.js","sourcesContent":["module.exports = \"html {\\n  box-sizing: border-box; }\\n\\n*, *::after, *::before {\\n  box-sizing: inherit; }\\n\\ndiv.container {\\n  max-width: 68em;\\n  margin-left: auto;\\n  margin-right: auto; }\\n  div.container::after {\\n    clear: both;\\n    content: \\\"\\\";\\n    display: table; }\\n\\n.blue {\\n  color: blue; }\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.scss\n ** module id = 553\n ** module chunks = 2\n **/","/*\n * Angular 2 decorators and services\n */\nimport {Directive, Component, View, ElementRef} from 'angular2/angular2';\nimport {RouteConfig, Router} from 'angular2/router';\nimport {Http, Headers} from 'angular2/http';\n\n/*\n * Angular Directives\n */\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES} from 'angular2/angular2';\nimport {ROUTER_DIRECTIVES} from 'angular2/router';\n\n\nlet styles = require('./app.scss');\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'app'\n  selector: 'app', // <app></app>\n  // We need to tell Angular's compiler which directives are in our template.\n  // Doing so will allow Angular to attach our behavior to an element\n  bindings: [ CORE_DIRECTIVES, FORM_DIRECTIVES, ROUTER_DIRECTIVES ],\n  // Our list of styles in our component. We may add more to compose many styles together\n  styles: [styles],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  template: `\n  <header>\n    <h1 class=\"title\">Hello {{ title }}</h1>\n  </header>\n\n  <main>\n    Your Content Here\n    <div>\n\n      <input type=\"text\" [value]=\"title\" (input)=\"title = $event.target.value\" autofocus>\n      <!--\n        Rather than wiring up two-way data-binding ourselves\n        we can use Angular's [(ng-model)] syntax\n        <input type=\"text\" [(ng-model)]=\"title\">\n      -->\n    </div>\n\n    <pre>this.title = {{ title | json }}</pre>\n    <pre>this.data = {{ data | json }}</pre>\n\n  </main>\n\n  <footer x-large>\n    WebPack Angular 2 Starter by <a href=\"https://twitter.com/AngularClass\">@AngularClass</a>\n  </footer>\n  `\n})\nexport class App {\n  // These are member type\n  title: string;\n  data: Array<any> = []; // default data\n  // TypeScript public modifiers\n  constructor(public http: Http) {\n    this.title = 'Angular 2';\n  }\n\n  onInit() {\n    // Our API\n    // Before you start the app, run these commands in another process:\n    //\n    // - npm run express-install\n    // - npm run express\n    //\n    // This will start a process that will listen for requests on port 3001\n\n    const BASE_URL = 'http://localhost:3001';\n    const TODO_API_URL = '/api/todos';\n    const JSON_HEADERS = new Headers();\n\n    JSON_HEADERS.append('Accept', 'application/json');\n    JSON_HEADERS.append('Content-Type', 'application/json');\n\n    this.http\n      .get(BASE_URL + TODO_API_URL, {\n        headers: JSON_HEADERS\n      })\n      .subscribe(\n        // onNext callback\n        data => this.serverData(data),\n        // onError callback\n        err  => this.errorMessage(err),\n        // onComplete callback\n        ()   => console.log('complete')\n      );//end http\n\n  }\n\n  serverData(data) {\n    console.log('data', data);\n    this.data = data;\n  }//serverData\n\n  errorMessage(err) {\n    console.info(`${'\\n'\n      } // You must run these commands in another process for the Http API to work  ${'\\n'\n      } npm run express-install ${'\\n'\n      } npm run express\n    `);\n  }//errorMessage\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/app.ts\n **/","/// <reference path=\"../typings/_custom.d.ts\" />\n\n/*\n * Providers provided by Angular\n */\nimport {bootstrap, FORM_PROVIDERS, ELEMENT_PROBE_PROVIDERS} from 'angular2/angular2';\nimport {ROUTER_PROVIDERS} from 'angular2/router';\nimport {HTTP_PROVIDERS} from 'angular2/http';\n\n/*\n * App Component\n * our top level component that holds all of our components\n */\nimport {App} from './app';\n\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\nbootstrap(App, [\n  // These are dependencies of our App\n  FORM_PROVIDERS,\n  ROUTER_PROVIDERS,\n  HTTP_PROVIDERS,\n  ELEMENT_PROBE_PROVIDERS\n]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/bootstrap.ts\n **/"],"sourceRoot":""}